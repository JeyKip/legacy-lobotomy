# Generated by Django 3.2.7 on 2021-11-08 20:09

import app.utils
import assignments.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(null=True)),
                ('image', models.ImageField(null=True, upload_to=app.utils.upload_image_path, verbose_name='Tile Image')),
                ('points', models.PositiveIntegerField(null=True)),
                ('time', models.PositiveIntegerField(blank=True, help_text='Time in minutes', null=True)),
                ('priority', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='AssignmentBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('type_of_block', models.CharField(blank=True, max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='AssingmentTarget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('min_age', models.PositiveSmallIntegerField(blank=True, default=13, null=True, validators=[assignments.validators.validate_min_age])),
                ('max_age', models.PositiveSmallIntegerField(blank=True, default=99, null=True, validators=[assignments.validators.validate_max_age])),
                ('male', models.BooleanField(default=False, help_text='Assign to all males')),
                ('female', models.BooleanField(default=False, help_text='Assign to all females')),
                ('non_binary', models.BooleanField(default=False, help_text='Assign to all non-binaries')),
                ('transgender', models.BooleanField(default=False, help_text='Assign to all transgenders')),
                ('other', models.BooleanField(default=False, help_text='Assign to all others')),
                ('law_explorer', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Target',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='ImageBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, upload_to=app.utils.upload_image_path)),
            ],
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('tip', models.TextField(blank=True)),
                ('is_correct', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='QuestionBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='TextBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='VideoBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.FileField(blank=True, upload_to=app.utils.upload_video_path, validators=[assignments.validators.FileValidator(content_types=('video/mpg', 'video/mp2', 'video/mpeg', 'video/mpe', 'video/mpv', 'video/mp4', 'video/m4p', 'video/m4v', 'video/qt', 'video/mov', 'video/wmv', 'video/flv', 'video/avi', 'video/mkv'))])),
                ('block', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='video', to='assignments.assignmentblock')),
            ],
        ),
        migrations.CreateModel(
            name='UserAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_completed', models.BooleanField(default=False)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assignments.assignment')),
            ],
        ),
    ]
